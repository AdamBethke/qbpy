from json import dumps
from requests import get, post
from pandas import DataFrame

from .exceptions import NotImplementedWarning

# RESPONSE FORMATTERS #########################################################
def response_formatter_default(res):
    """Return a the response without modification."""
    return res


def response_formatter_api_doquery(res):
    """Convert API_DoQuery response to usable format."""
    if not res['table']['records']:
        res['table']['records'] = {'record': None}
    else:
        if not isinstance(res['table']['records']['record'], list):
            res['table']['records']['record'] = [res['table']['records']['record']]
        for record in res['table']['records']['record']:
            if not isinstance(record['f'], list):
                record['f'] = [record['f']]
            for column in record['f']:
                if 'value' in column:
                    record[column['id']] = column['value']
                else:
                    record[column['id']] = None
            del record['f']
    return res


def response_formatter_api_userroles(res):
    """Convert API_UserRoles response to usable format."""
    for user in res['users']['user']:
        user['roles'] = dumps(user['roles'])
    return res


# PANDAS FORMATTERS ###########################################################
def dataframe_formatter_default(response):
    """Raise a warning and return an empty DataFrame"""
    NotImplementedWarning(response['action'], 'No DataFrame conversion specified')
    return DataFrame()


def dataframe_formatter_api_doquery(response):
    """Format result and return a DataFrame"""
    return DataFrame(response['table']['records']['record'])


def dataframe_formatter_api_userroles(response):
    """Format result and return a DataFrame"""
    return DataFrame(response['users']['user'])


# CONFIGURATION PARAMETERS ####################################################
CONFIGURATION = {
    'API_AddField': {
        'allowable_parameters': [
            'apptoken',
            'ticket',
            'usertoken',
            'udata',
            'add_to_forms',
            'label',
            'mode',
            'type'
        ],
        'dataframe_formatter': dataframe_formatter_default,
        'method': get,
        'response_formatter': response_formatter_default,
        'response_type': 'xml',
        'scope': 'table',
        'xml': False,
    },
    'API_AddGroupToRole': {
        'allowable_parameters': ['apptoken', 'ticket', 'usertoken', 'udata', 'gid', 'roleid'],
        'dataframe_formatter': dataframe_formatter_default,
        'method': get,
        'response_formatter': response_formatter_default,
        'response_type': 'xml',
        'scope': 'application',
        'xml': False,
    },
    'API_AddRecord': {
        'allowable_parameters': [
            'apptoken',
            'ticket',
            'usertoken',
            'udata',
            'fields',
            'ignoreerror',
            'msinutc'
        ],
        'dataframe_formatter': dataframe_formatter_default,
        'method': get,
        'response_formatter': response_formatter_default,
        'response_type': 'xml',
        'scope': 'table',
        'xml': False,
    },
    'API_AddReplaceDBPage': {
        'allowable_parameters': [
            'apptoken',
            'ticket',
            'usertoken',
            'udata',
            'pagename',
            'pageid',
            'pagetype',
            'pagebody'
        ],
        'dataframe_formatter': dataframe_formatter_default,
        'method': get,
        'response_formatter': response_formatter_default,
        'response_type': 'xml',
        'scope': 'application',
        'xml': True
    },
    'API_AddSubGroup': {
        'allowable_parameters': ['apptoken', 'ticket', 'usertoken', 'udata', 'gid', 'subgroupid'],
        'dataframe_formatter': dataframe_formatter_default,
        'method': get,
        'response_formatter': response_formatter_default,
        'response_type': 'xml',
        'scope': 'realm',
        'xml': False,
    },
    'API_AddUserToGroup': {
        'allowable_parameters': [
            'apptoken',
            'ticket',
            'usertoken',
            'udata',
            'gid',
            'uid',
            'email',
            'screenname',
            'allowadminaccess'
        ],
        'dataframe_formatter': dataframe_formatter_default,
        'method': get,
        'response_formatter': response_formatter_default,
        'response_type': 'xml',
        'scope': 'realm',
        'xml': False,
    },
    'API_AddUserToRole': {
        'allowable_parameters': ['apptoken', 'ticket', 'usertoken', 'udata', 'userid', 'roleid'],
        'dataframe_formatter': dataframe_formatter_default,
        'method': get,
        'response_formatter': response_formatter_default,
        'response_type': 'xml',
        'scope': 'application',
        'xml': False,
    },
    'API_Authenticate': {
        'allowable_parameters': [
            'apptoken',
            'ticket',
            'usertoken',
            'udata',
            'username',
            'password',
            'hours'
        ],
        'dataframe_formatter': dataframe_formatter_default,
        'method': get,
        'response_formatter': response_formatter_default,
        'response_type': 'xml',
        'scope': 'realm',
        'xml': False,
    },
    'API_ChangeGroupInfo': {
        'allowable_parameters': [
            'apptoken',
            'ticket',
            'usertoken',
            'udata',
            'gid',
            'name',
            'description',
            'accountid'
        ],
        'dataframe_formatter': dataframe_formatter_default,
        'method': get,
        'response_formatter': response_formatter_default,
        'response_type': 'xml',
        'scope': 'realm',
        'xml': False,
    },
    'API_ChangeManager': {
        'allowable_parameters': ['apptoken', 'ticket', 'usertoken', 'udata', 'newmgr'],
        'dataframe_formatter': dataframe_formatter_default,
        'method': get,
        'response_formatter': response_formatter_default,
        'response_type': 'xml',
        'scope': 'application',
        'xml': False,
    },
    'API_ChangeRecordOwner': {
        'allowable_parameters': [
            'apptoken',
            'ticket',
            'usertoken',
            'udata',
            'rid',
            'key',
            'newowner'
        ],
        'dataframe_formatter': dataframe_formatter_default,
        'method': get,
        'response_formatter': response_formatter_default,
        'response_type': 'xml',
        'scope': 'table',
        'xml': False,
    },
    'API_ChangeUserRole': {
        'allowable_parameters': [
            'apptoken',
            'ticket',
            'usertoken',
            'udata',
            'userid',
            'roleid',
            'newroleid'
        ],
        'dataframe_formatter': dataframe_formatter_default,
        'method': get,
        'response_formatter': response_formatter_default,
        'response_type': 'xml',
        'scope': 'application',
        'xml': False,
    },
    'API_CloneDatabase': {
        'allowable_parameters': [
            'apptoken',
            'ticket',
            'usertoken',
            'udata',
            'newdbname',
            'newdbdesc',
            'keepdata',
            'excludefiles',
            'usersandroles'
        ],
        'dataframe_formatter': dataframe_formatter_default,

        'method': get,
        'response_formatter': response_formatter_default,
        'response_type': 'xml',
        'scope': 'application',
        'xml': False,
    },
    'API_CopyGroup': {
        'allowable_parameters': [
            'apptoken',
            'ticket',
            'usertoken',
            'udata',
            'gid',
            'name',
            'description',
            'gacct'
        ],
        'dataframe_formatter': dataframe_formatter_default,
        'method': get,
        'response_formatter': response_formatter_default,
        'response_type': 'xml',
        'scope': 'realm',
        'xml': False,
    },
    'API_CopyMasterDetail': {
        'allowable_parameters': [
            'apptoken',
            'ticket',
            'usertoken',
            'udata',
            'destrid',
            'sourcerid',
            'copyfid',
            'recurse',
            'relfids'
        ],
        'dataframe_formatter': dataframe_formatter_default,
        'method': get,
        'response_formatter': response_formatter_default,
        'response_type': 'xml',
        'scope': 'table',
        'xml': False,
    },
    'API_CreateDatabase': {
        'allowable_parameters': [
            'apptoken',
            'ticket',
            'udata',
            'dbname',
            'dbdesc',
            'createapptoken'
        ],
        'dataframe_formatter': dataframe_formatter_default,
        'method': get,
        'response_formatter': response_formatter_default,
        'response_type': 'xml',
        'scope': 'realm',
        'xml': False,
    },
    'API_CreateGroup': {
        'allowable_parameters': [
            'apptoken',
            'ticket',
            'udata',
            'name',
            'description',
            'accountid'
        ],
        'dataframe_formatter': dataframe_formatter_default,
        'method': get,
        'response_formatter': response_formatter_default,
        'response_type': 'xml',
        'scope': 'realm',
        'xml': False,
    },
    'API_CreateTable': {
        'allowable_parameters': ['apptoken', 'ticket', 'usertoken', 'udata', 'tname', 'pnoun'],
        'dataframe_formatter': dataframe_formatter_default,
        'method': get,
        'response_formatter': response_formatter_default,
        'response_type': 'xml',
        'scope': 'application',
        'xml': False,
    },
    'API_DeleteDatabase': {
        'allowable_parameters': ['apptoken', 'ticket', 'usertoken', 'udata'],
        'dataframe_formatter': dataframe_formatter_default,
        'method': get,
        'response_formatter': response_formatter_default,
        'response_type': 'xml',
        'scope': 'application',
        'xml': False,
    },
    'API_DeleteField': {
        'allowable_parameters': ['apptoken', 'ticket', 'usertoken', 'udata', 'fid'],
        'dataframe_formatter': dataframe_formatter_default,
        'method': get,
        'response_formatter': response_formatter_default,
        'response_type': 'xml',
        'scope': 'table',
        'xml': False,
    },
    'API_DeleteGroup': {
        'allowable_parameters': ['apptoken', 'ticket', 'usertoken', 'udata', 'gid'],
        'dataframe_formatter': dataframe_formatter_default,
        'method': get,
        'response_formatter': response_formatter_default,
        'response_type': 'xml',
        'scope': 'realm',
        'xml': False,
    },
    'API_DeleteRecord': {
        'allowable_parameters': ['apptoken', 'ticket', 'usertoken', 'udata', 'rid', 'key'],
        'dataframe_formatter': dataframe_formatter_default,
        'method': get,
        'response_formatter': response_formatter_default,
        'response_type': 'xml',
        'scope': 'table',
        'xml': False,
    },
    'API_DoQuery': {
        'allowable_parameters': [
            'apptoken',
            'ticket',
            'usertoken',
            'udata',
            'query',
            'qid',
            'qname',
            'clist',
            'slist',
            'fmt',
            'returnpercentage',
            'parameters',
            'includerids',
            'usefids',
            'options',
        ],
        'dataframe_formatter': dataframe_formatter_api_doquery,
        'method': get,
        'response_formatter': response_formatter_api_doquery,
        'response_type': 'xml',
        'scope': 'table',
        'xml': False,
    },
    'API_DoQueryCount': {
        'allowable_parameters': [
            'apptoken',
            'ticket',
            'usertoken',
            'udata',
            'query',
            'qid',
            'qname'
        ],
        'dataframe_formatter': dataframe_formatter_default,
        'method': get,
        'response_formatter': response_formatter_default,
        'response_type': 'xml',
        'scope': 'table',
        'xml': False,
    },
    'API_EditRecord': {
        'allowable_parameters': [
            'apptoken',
            'ticket',
            'usertoken',
            'udata',
            'rid',
            'key',
            'update_id',
            'field',
            'disprec',
            'fform',
            'ignoreerror'
        ],
        'dataframe_formatter': dataframe_formatter_default,
        'method': get,
        'response_formatter': response_formatter_default,
        'response_type': 'xml',
        'scope': 'table',
        'xml': False,
    },
    'API_FieldAddChoices': {
        'allowable_parameters': ['apptoken', 'ticket', 'usertoken', 'udata', 'fid', 'choice'],
        'dataframe_formatter': dataframe_formatter_default,
        'method': get,
        'response_formatter': response_formatter_default,
        'response_type': 'xml',
        'scope': 'table',
        'xml': False,
    },
    'API_FieldRemoveChoices': {
        'allowable_parameters': ['apptoken', 'ticket', 'usertoken', 'udata', 'fid', 'choice'],
        'dataframe_formatter': dataframe_formatter_default,
        'method': get,
        'response_formatter': response_formatter_default,
        'response_type': 'xml',
        'scope': 'table',
        'xml': False,
    },
    'API_FindDBByName': {
        'allowable_parameters': [
            'apptoken',
            'ticket',
            'usertoken',
            'udata',
            'dbname',
            'parentsonly'
        ],
        'dataframe_formatter': dataframe_formatter_default,
        'method': get,
        'response_formatter': response_formatter_default,
        'response_type': 'xml',
        'scope': 'realm',
        'xml': False,
    },
    'API_GenAddRecordForm': {
        'allowable_parameters': ['apptoken', 'ticket', 'usertoken', 'udata', 'field'],
        'dataframe_formatter': dataframe_formatter_default,
        'method': get,
        'response_formatter': response_formatter_default,
        'response_type': 'url',
        'scope': 'application',
        'xml': False,
    },
    'API_GenResultsTable': {
        'allowable_parameters': [
            'apptoken',
            'ticket',
            'usertoken',
            'udata',
            'query',
            'qid',
            'qname',
            'clist',
            'slist',
            'jht',
            'jsa',
            'options'
        ],
        'dataframe_formatter': dataframe_formatter_default,
        'method': get,
        'response_formatter': response_formatter_default,
        'response_type': 'url',
        'scope': 'application',
        'xml': False,
    },
    'API_GetAncestorInfo': {
        'allowable_parameters': ['apptoken', 'ticket', 'usertoken', 'udata'],
        'dataframe_formatter': dataframe_formatter_default,
        'method': get,
        'response_formatter': response_formatter_default,
        'response_type': 'xml',
        'scope': 'application',
        'xml': False,
    },
    'API_GetAppDTMInfo': {
        'allowable_parameters': ['dbid'],
        'dataframe_formatter': dataframe_formatter_default,
        'method': get,
        'response_formatter': response_formatter_default,
        'response_type': 'xml',
        'scope': 'realm',
        'xml': False,
    },
    'API_GetDBInfo': {
        'allowable_parameters': ['apptoken', 'ticket', 'usertoken', 'udata'],
        'dataframe_formatter': dataframe_formatter_default,
        'method': get,
        'response_formatter': response_formatter_default,
        'response_type': 'xml',
        'scope': 'application',
        'xml': False,
    },
    'API_GetDBPage': {
        'allowable_parameters': ['apptoken', 'ticket', 'usertoken', 'udata', 'pageid'],
        'dataframe_formatter': dataframe_formatter_default,
        'method': get,
        'response_formatter': response_formatter_default,
        'response_type': 'xml',
        'scope': 'application',
        'xml': False,
    },
    'API_GetDBVar': {
        'allowable_parameters': ['apptoken', 'ticket', 'usertoken', 'udata', 'varname'],
        'dataframe_formatter': dataframe_formatter_default,
        'method': get,
        'response_formatter': response_formatter_default,
        'response_type': 'xml',
        'scope': 'application',
        'xml': False,
    },
    'API_GetFieldProperties': {
        'allowable_parameters': ['apptoken', 'ticket', 'usertoken', 'udata', 'fid'],
        'dataframe_formatter': dataframe_formatter_default,
        'method': get,
        'response_formatter': response_formatter_default,
        'response_type': 'xml',
        'scope': 'table',
        'xml': False,
    },
    'API_GetGroupRole': {
        'allowable_parameters': ['apptoken', 'ticket', 'usertoken', 'udata', 'gid'],
        'dataframe_formatter': dataframe_formatter_default,
        'method': get,
        'response_formatter': response_formatter_default,
        'response_type': 'xml',
        'scope': 'application',
        'xml': False,
    },
    'API_GetNumRecords': {
        'allowable_parameters': ['apptoken', 'ticket', 'usertoken', 'udata'],
        'dataframe_formatter': dataframe_formatter_default,
        'method': get,
        'response_formatter': response_formatter_default,
        'response_type': 'xml',
        'scope': 'table',
        'xml': False,
    },
    'API_GetRecordAsHTML': {
        'allowable_parameters': ['apptoken', 'ticket', 'usertoken', 'udata', 'rid', 'key', 'dfid'],
        'dataframe_formatter': dataframe_formatter_default,
        'method': get,
        'response_formatter': response_formatter_default,
        'response_type': 'url',
        'scope': 'table',
        'xml': False,
    },
    'API_GetRecordInfo': {
        'allowable_parameters': ['apptoken', 'ticket', 'usertoken', 'udata', 'rid', 'key'],
        'dataframe_formatter': dataframe_formatter_default,
        'method': get,
        'response_formatter': response_formatter_default,
        'response_type': 'xml',
        'scope': 'table',
        'xml': False,
    },
    'API_GetRoleInfo': {
        'allowable_parameters': ['apptoken', 'ticket', 'usertoken', 'udata'],
        'dataframe_formatter': dataframe_formatter_default,
        'method': get,
        'response_formatter': response_formatter_default,
        'response_type': 'xml',
        'scope': 'application',
        'xml': False,
    },
    'API_GetSchema': {
        'allowable_parameters': ['apptoken', 'ticket', 'usertoken', 'udata'],
        'dataframe_formatter': dataframe_formatter_default,
        'method': get,
        'response_formatter': response_formatter_default,
        'response_type': 'xml',
        'scope': 'application',
        'xml': False,
    },
    'API_GetUserInfo': {
        'allowable_parameters': ['apptoken', 'ticket', 'usertoken', 'udata', 'email'],
        'dataframe_formatter': dataframe_formatter_default,
        'method': get,
        'response_formatter': response_formatter_default,
        'response_type': 'xml',
        'scope': 'realm',
        'xml': False,
    },
    'API_GetUserRole': {
        'allowable_parameters': ['apptoken', 'ticket', 'usertoken', 'udata', 'userid', 'inclgrps'],
        'dataframe_formatter': dataframe_formatter_default,
        'method': get,
        'response_formatter': response_formatter_default,
        'response_type': 'xml',
        'scope': 'application',
        'xml': False,
    },
    'API_GetUsersInGroup': {
        'allowable_parameters': [
            'apptoken',
            'ticket',
            'usertoken',
            'udata',
            'gid',
            'includeallmgrs'
        ],
        'dataframe_formatter': dataframe_formatter_default,
        'method': get,
        'response_formatter': response_formatter_default,
        'response_type': 'xml',
        'scope': 'realm',
        'xml': False,
    },
    'API_GrantedDBs': {
        'allowable_parameters': [
            'apptoken',
            'ticket',
            'usertoken',
            'udata',
            'adminonly',
            'excludeparents',
            'includeancestors',
            'withembeddedtables'
        ],
        'dataframe_formatter': dataframe_formatter_default,
        'method': get,
        'response_formatter': response_formatter_default,
        'response_type': 'xml',
        'scope': 'realm',
        'xml': False,
    },
    'API_GrantedDBsForGroup': {
        'allowable_parameters': ['apptoken', 'ticket', 'usertoken', 'udata', 'gid'],
        'dataframe_formatter': dataframe_formatter_default,
        'method': get,
        'response_formatter': response_formatter_default,
        'response_type': 'xml',
        'scope': 'realm',
        'xml': False,
    },
    'API_GrantedGroups': {
        'allowable_parameters': ['apptoken', 'ticket', 'udata', 'userid', 'adminonly'],
        'dataframe_formatter': dataframe_formatter_default,
        'method': get,
        'response_formatter': response_formatter_default,
        'response_type': 'xml',
        'scope': 'realm',
        'xml': False,
    },
    'API_ImportFromCSV': {
        'allowable_parameters': [
            'apptoken',
            'ticket',
            'usertoken',
            'udata',
            'records_csv',
            'clist',
            'clist_output',
            'decimalpercent',
            'skipfirst',
            'msinutc'
        ],
        'dataframe_formatter': dataframe_formatter_default,
        'method': post,
        'response_formatter': response_formatter_default,
        'response_type': 'xml',
        'scope': 'application',
        'xml': True
    },
    'API_ProvisionUser': {
        'allowable_parameters': [
            'apptoken',
            'ticket',
            'usertoken',
            'udata',
            'email',
            'roleid',
            'fname',
            'lname'
        ],
        'dataframe_formatter': dataframe_formatter_default,
        'method': get,
        'response_formatter': response_formatter_default,
        'response_type': 'xml',
        'scope': 'application',
        'xml': False,
    },
    'API_PurgeRecords': {
        'allowable_parameters': [
            'apptoken',
            'ticket',
            'usertoken',
            'udata',
            'query',
            'qid',
            'qname'
        ],
        'dataframe_formatter': dataframe_formatter_default,
        'method': get,
        'response_formatter': response_formatter_default,
        'response_type': 'xml',
        'scope': 'table',
        'xml': False,
    },
    'API_RemoveGroupFromRole': {
        'allowable_parameters': [
            'apptoken',
            'ticket',
            'usertoken',
            'udata',
            'gid',
            'roleid',
            'allroles'
        ],
        'dataframe_formatter': dataframe_formatter_default,
        'method': get,
        'response_formatter': response_formatter_default,
        'response_type': 'xml',
        'scope': 'application',
        'xml': False,
    },
    'API_RemoveSubgroup': {
        'allowable_parameters': ['apptoken', 'ticket', 'usertoken', 'udata', 'gid', 'subgroupid'],
        'dataframe_formatter': dataframe_formatter_default,
        'method': get,
        'response_formatter': response_formatter_default,
        'response_type': 'xml',
        'scope': 'realm',
        'xml': False,
    },
    'API_RemoveUserFromGroup': {
        'allowable_parameters': [
            'apptoken',
            'ticket',
            'usertoken',
            'udata',
            'gid',
            'uid',
            'email',
            'screenname'
        ],
        'dataframe_formatter': dataframe_formatter_default,
        'method': get,
        'response_formatter': response_formatter_default,
        'response_type': 'xml',
        'scope': 'realm',
        'xml': False,
    },
    'API_RemoveUserFromRole': {
        'allowable_parameters': ['apptoken', 'ticket', 'usertoken', 'udata', 'userid', 'roleid'],
        'dataframe_formatter': dataframe_formatter_default,
        'method': get,
        'response_formatter': response_formatter_default,
        'response_type': 'xml',
        'scope': 'application',
        'xml': False,
    },
    'API_RenameApp': {
        'allowable_parameters': ['apptoken', 'ticket', 'usertoken', 'udata', 'newappname'],
        'dataframe_formatter': dataframe_formatter_default,
        'method': get,
        'response_formatter': response_formatter_default,
        'response_type': 'xml',
        'scope': 'table',
        'xml': False,
    },
    'API_RunImport': {
        'allowable_parameters': ['apptoken', 'ticket', 'usertoken', 'udata', 'id'],
        'dataframe_formatter': dataframe_formatter_default,
        'method': get,
        'response_formatter': response_formatter_default,
        'response_type': 'xml',
        'scope': 'application',
        'xml': False,
    },
    'API_SendInvitation': {
        'allowable_parameters': ['apptoken', 'ticket', 'usertoken', 'udata', 'userid', 'usertext'],
        'dataframe_formatter': dataframe_formatter_default,
        'method': get,
        'response_formatter': response_formatter_default,
        'response_type': 'xml',
        'scope': 'application',
        'xml': False,
    },
    'API_SetDBVar': {
        'allowable_parameters': ['apptoken', 'ticket', 'usertoken', 'udata', 'varname', 'value'],
        'dataframe_formatter': dataframe_formatter_default,
        'method': get,
        'response_formatter': response_formatter_default,
        'response_type': 'xml',
        'scope': 'application',
        'xml': False,
    },
    'API_SetFieldProperties': {
        'allowable_parameters': [
            'apptoken',
            'ticket',
            'usertoken',
            'udata',
            'fid',
            'appears_by_default',
            'bold',
            'comments',
            'default_value',
            'fieldhelp',
            'find_enabled',
            'label',
            'no_wrap',
            'num_lines',
            'required',
            'unique',
            'width',
            'doesdatacopy',
            'append_only',
            'maxlength',
            'allowhtml',
            'choices',
            'sort_as_given',
            'allow_new_choices',
            'blank_is_zero',
            'numberfmt',
            'comma_start',
            'does_average',
            'does_total',
            'currency_format',
            'currency_symbol',
            'decimal_places',
            'default_today',
            'display_dow',
            'display_month',
            'display_relative',
            'display_time',
            'display_zone',
            'has_extension',
            'display_as_button',
            'formula'
        ],
        'dataframe_formatter': dataframe_formatter_default,
        'method': get,
        'response_formatter': response_formatter_default,
        'response_type': 'xml',
        'scope': 'table',
        'xml': False,
    },
    'API_SetKeyField': {
        'allowable_parameters': ['apptoken', 'ticket', 'usertoken', 'udata', 'fid'],
        'dataframe_formatter': dataframe_formatter_default,
        'method': get,
        'response_formatter': response_formatter_default,
        'response_type': 'xml',
        'scope': 'table',
        'xml': False,
    },
    'API_UploadFile': {
        'allowable_parameters': [
            'apptoken',
            'ticket',
            'usertoken',
            'udata',
            'field',
            'rid',
            'key',
            'ignoreerror'
        ],
        'dataframe_formatter': dataframe_formatter_default,
        'method': post,
        'response_formatter': response_formatter_default,
        'response_type': 'xml',
        'scope': 'table',
        'xml': True,
    },
    'API_UserRoles': {
        'allowable_parameters': ['apptoken', 'ticket', 'usertoken', 'udata'],
        'dataframe_formatter': dataframe_formatter_api_userroles,
        'method': get,
        'response_formatter': response_formatter_api_userroles,
        'response_type': 'xml',
        'scope': 'application',
        'xml': False,
    },
    'API_Webhooks_Activate': {
        'allowable_parameters': ['apptoken', 'ticket', 'usertoken', 'udata', 'actionidlist'],
        'dataframe_formatter': dataframe_formatter_default,
        'method': get,
        'response_formatter': response_formatter_default,
        'response_type': 'xml',
        'scope': 'application',
        'xml': False,
    },
    'API_Webhooks_Copy': {
        'allowable_parameters': ['apptoken', 'ticket', 'usertoken', 'udata', 'actionid'],
        'dataframe_formatter': dataframe_formatter_default,
        'method': get,
        'response_formatter': response_formatter_default,
        'response_type': 'xml',
        'scope': 'application',
        'xml': False,
    },
    'API_Webhooks_Delete': {
        'allowable_parameters': ['apptoken', 'ticket', 'usertoken', 'udata', 'actionidlist'],
        'dataframe_formatter': dataframe_formatter_default,
        'method': get,
        'response_formatter': response_formatter_default,
        'response_type': 'xml',
        'scope': 'application',
        'xml': False,
    },
    'API_Webhooks_Deactivate': {
        'allowable_parameters': ['apptoken', 'ticket', 'usertoken', 'udata', 'actionidlist'],
        'dataframe_formatter': dataframe_formatter_default,
        'method': get,
        'response_formatter': response_formatter_default,
        'response_type': 'xml',
        'scope': 'application',
        'xml': False,
    }
}
